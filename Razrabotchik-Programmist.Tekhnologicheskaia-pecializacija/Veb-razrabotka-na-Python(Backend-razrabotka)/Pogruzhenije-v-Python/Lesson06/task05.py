"""
Добавьте в пакет, созданный на семинаре шахматный модуль. Внутри него
напишите код, решающий задачу о 8 ферзях. Известно, что на доске 8×8 можно
расставить 8 ферзей так, чтобы они не били друг друга. Вам дана расстановка 8
ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
Программа получает на вход восемь пар чисел, каждое число от 1 до 8 -
координаты 8 ферзей. Если ферзи не бьют друг друга верните истину, а если бьют
- ложь.
"""


def can_attacks(queen1, queen2):
    """
    Проверяет, бьют ли друг друга два ферзя.

    :param queen1: Кортеж с координатами первого ферзя (x1, y1)
    :param queen2: Кортеж с координатами второго ферзя (x2, y2)
    :return: True, если ферзи бьют друг друга, иначе False
    """
    x1, y1 = queen1
    x2, y2 = queen2

    # Ферзи бьют друг друга, если находятся в одной линии (по строке, столбцу или диагонали)
    return (x1 == x2) or (y1 == y2) or (abs(x1 - x2) == abs(y1 - y2))


def are_queens_safe(queens):
    """
    Проверяет, не бьют ли друг друга 8 ферзей.

    :param queens: Список с координатами ферзей [(x1, y1), (x2, y2), ..., (x8, y8)]
    :return: True, если ферзи не бьют друг друга, иначе False
    """
    for i in range(len(queens)):
        for j in range(i + 1, len(queens)):
            if can_attacks(queens[i], queens[j]):
                return False  # Если хотя бы одна пара ферзей бьет друг друга, возвращаем False
    return True  # Если ни одна пара не бьет друг друга, возвращаем True


# Пример использования
if __name__ == "__main__":
    # Ввод: координаты 8 ферзей
    queens_positions = [(1, 1), (2, 3), (3, 5), (4, 7), (5, 2), (6, 4), (7, 6), (8, 8)]

    # Проверка на безопасность
    result = are_queens_safe(queens_positions)
    print(result)  # Вывод: False, если хотя бы пара ферзей бьет друг друга

"""
В программировании иногда возникает ситуация, когда работу функции нужно
замедлить. Типичный пример — функция, которая постоянно проверяет,
изменились ли данные на веб-странице или её код.
Реализуйте декоратор, который перед выполнением декорируемой функции
ждёт несколько секунд.
"""

import time


def delay(seconds):
    """
    Декоратор, который перед выполнением декорируемой функции
    заставляет её подождать заданное количество секунд.

    :param seconds: Количество секунд, которые нужно подождать.
    """

    def decorator(func):
        def wrapper(*args, **kwargs):
            print(f"Жду {seconds} секунд перед выполнением функции...")
            time.sleep(seconds)  # Ожидание указанное количество секунд
            return func(*args, **kwargs)  # Вызов оригинальной функции

        return wrapper

    return decorator


# Пример использования декоратора
@delay(3)  # Функция будет ждать 3 секунды перед выполнением
def test():
    print("Функция выполнена!")


test()
